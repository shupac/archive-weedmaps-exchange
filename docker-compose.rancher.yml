# https://docs.docker.com/compose/extends/
# This file gets automatically loaded via docker-compose/rancher-compose.
#
# It's used to set local dev specific overrides for volumes and ports.
#
# In local dev we use the docker-compose.override.yml as the override removing ports
# and local volumes bound to the host.
#
# YAML (String|Integer) get replaced/overridden
# YAML Arrays get merged/appended opposed to overridden
version: "2"
services:
  app:
    image: docker-registry.weedmaps.com/exchange-fe/app:${sha}
    mem_limit: 3584000000
    labels:
      io.rancher_nginxlb.server_names: exchange-fe-${DEPLOY_ENVIRONMENT}.internal-weedmaps.com,exchange.weedmaps.com
      io.rancher.scheduler.global: 'true'
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL}
      com.datadoghq.ad.check_names: '["tcp_check"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"name":"exchange-fe_app", "host":"%%host%%", "port":"%%port%%", "collect_response_time":"true", "timeout":"3", "tags":["env:${deploy_environment}"]}]'
    ports:
      - 1620
    environment:
      - LOGSTASH_TAGS=exchange-fe,${deploy_environment},nodejs,app
      - LOGSTASH_FIELDS=stack=exchange-fe,service=app,deploy_environment=${deploy_environment},sha=${sha},application_environment=${application_environment}
  storybook:
    image: docker-registry.weedmaps.com/exchange-fe/storybook:${sha}
    labels:
      io.rancher.scheduler.global: 'true'
      io.rancher.scheduler.affinity:host_label: ${HOST_LABEL}
      # Server names from Consul
      io.rancher_nginxlb.server_names: ${STORYBOOK_SERVER_NAMES}
      com.datadoghq.ad.check_names: '["tcp_check"]'
      com.datadoghq.ad.init_configs: '[{}]'
      com.datadoghq.ad.instances: '[{"name":"exchange-fe-storybook", "host":"%%host%%", "port":"%%port%%", "collect_response_time":"true", "timeout":"3", "tags":["env:${deploy_environment}"]}]'
    environment:
      - LOGSTASH_TAGS=exchange-fe,${deploy_environment},nodejs,app
      - LOGSTASH_FIELDS=stack=exchange-fe,service=storybook,deploy_environment=${deploy_environment},sha=${sha},application_environment=${application_environment}
    ports:
      - 8080
