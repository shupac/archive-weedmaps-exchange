worker_processes auto;

events {
    use epoll;
    worker_connections 4096;
    multi_accept on;
}

error_log /dev/stdout info;
http {
  resolver ${RESOLVER_IP} valid=1s;

  log_format timed_combined escape=json '{ "time_local": "$time_local", '
 '"remote_addr": "$remote_addr", '
 '"remote_user": "$remote_user", '
 '"request": "$request", '
 '"status": "$status", '
 '"body_bytes_sent": "$body_bytes_sent", '
 '"request_time": "$request_time", '
 '"http_referrer": "$http_referer", '
 '"http_user_agent": "$http_user_agent", '
 '"upstream_response_time": "$upstream_response_time", '
 '"pipe": "$pipe", '
 '"wm_request_id": "$http_WM_Request_Id" }';

  server {
    include /etc/nginx/mime.types;
    gzip on;
    gzip_types text/plain text/css application/json text/javascript application/javascript image/png image/jpeg image/gif;

    listen 80;
    server_name admin.weedmaps.com www.admin.weedmaps.com;
    access_log /dev/stdout timed_combined;

    # Redirect from http to https
    if ($http_x_forwarded_proto = "http") {
      set $http_www_redirect "1";
      set $http_redirect_host $host;
    }

    if ($host ~* ^www\.(.+)$) {
      set $http_www_redirect "1";
      set $http_redirect_host $1;
    }

    if ($http_www_redirect = "1") {
      return 301 https://$http_redirect_host$request_uri;
    }

    # Browser and robot always look for these
    # Turn off logging for them
    location = /favicon.ico { log_not_found off; access_log off; }
    location = /robots.txt  { log_not_found off; access_log off; }

    set $admin http://app:1620;

    location = / {
      return 302 ${NEW_ADMIN_URL};
    }

    location /dev/login { return 302 $scheme://weedmaps.com/login; }

    location / {
      proxy_set_header Host $host;
      proxy_pass $admin;
      proxy_redirect off;

      # Handle Web Socket connections
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }

    location ~* ^\/_next\/.*\/main.js$ {
      sendfile   on;
      tcp_nopush on;
      default_type application/javascript;
      root /var/www/admin;
      rewrite ^ /build/.next/main.js break;
    }

    location ~* ^\/_next\/.*\/page\/(?<page_name>[^\/?]*).*$ {
      sendfile   on;
      tcp_nopush on;
      default_type application/javascript;
      root /var/www/admin;
      if ($page_name = '') {
          set $page_name index;
      }
      rewrite ^ /build/.next/bundles/pages/$page_name break;
    }

    location /static/config.js {
      proxy_pass $admin;
    }

    location /static {
      root /var/www/admin;
    }
  }
}
